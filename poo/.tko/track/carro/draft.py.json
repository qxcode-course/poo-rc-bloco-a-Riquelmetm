{
    "patches": [
        {
            "label": "2025-10-06_02-23-45",
            "content": "@@ -904,41 +904,8 @@\n urn%0A\n-        distancia = int(input())%0A\n     \n@@ -1147,16 +1147,17 @@\n        %0A\n+%0A\n def main\n@@ -1164,28 +1164,8 @@\n ():%0A\n-    carro = Carro()%0A\n     \n@@ -1189,382 +1189,43 @@\n     \n-comando = input()%0A        if comando == %22end%22:%0A            break%0A        elif comando == %22enter%22:%0A            carro.enter()%0A        elif comando == %22leave%22:%0A            carro.leave()%0A        elif comando == %22show%22:%0A            print(carro)%0A        elif comando == %22fuel%22:%0A            carro.fuel_increment()%0A        elif comando == %22drive%22:%0A            carro.drive_distance()%0A%0A\n+print(Carro)%0A        print(%22oi%22)%0A    \n %0A%0A\n",
            "lines": "46"
        },
        {
            "label": "2025-10-06_02-41-06",
            "content": "@@ -145,17 +145,16 @@\n x = 100%0A\n-%0A\n     def \n@@ -244,17 +244,16 @@\n lf.km%7D%22%0A\n-%0A\n     def \n@@ -257,32 +257,55 @@\n ef enter(self):%0A\n+        self.pass_ +=1%0A\n         if self.\n@@ -380,35 +380,24 @@\n ingido%22)%0A   \n-     else:%0A\n             \n@@ -385,35 +385,32 @@\n o%22)%0A            \n-   \n self.pass_ += 1%0A\n@@ -408,13 +408,11 @@\n ss_ \n-+= 1%0A\n+-=1\n %0A   \n@@ -421,32 +421,55 @@\n ef leave(self):%0A\n+        self.pass_ -=1%0A\n         if self.\n@@ -466,33 +466,33 @@\n   if self.pass_ \n-=\n+%3C\n = 0:%0A           \n@@ -535,51 +535,8 @@\n o%22)%0A\n-        else:%0A            self.pass_ -= 1%0A%0A\n     \n@@ -562,18 +562,8 @@\n self\n-, qtd: int\n ):%0A \n@@ -582,14 +582,22 @@\n gas \n-+\n = \n-qtd\n+int(input())\n %0A   \n@@ -662,17 +662,27 @@\n f.gasMax\n-%0A\n+ - self.gas\n %0A    def\n@@ -713,17 +713,16 @@\n stancia:\n- \n int):%0A  \n@@ -741,19 +741,18 @@\n f.pass_ \n+%3C\n =\n-= \n 0:%0A     \n@@ -768,36 +768,36 @@\n int(%22fail: n\n-ao ha\n+%C3%A3o h%C3%A1\n  ningu\n-e\n+%C3%A9\n m no carro%22)\n@@ -836,19 +836,18 @@\n elf.gas \n+%3C\n =\n-= \n 0:%0A     \n@@ -892,32 +892,65 @@\n          return%0A\n+        distancia = int(input())%0A\n         if self.\n@@ -954,17 +954,16 @@\n lf.gas %3E\n-=\n  distanc\n@@ -986,17 +986,16 @@\n self.km \n-+\n = distan\n@@ -1171,16 +1171,25 @@\n s = 0%0A%0A%0A\n+        %0A\n def main\n@@ -1226,16 +1226,17 @@\n ile True\n+ \n :%0A      \n@@ -1258,24 +1258,8 @@\n ut()\n-.strip().split()\n %0A   \n@@ -1269,27 +1269,24 @@\n   if comando\n-%5B0%5D\n  == %22end%22:%0A \n@@ -1318,27 +1318,24 @@\n elif comando\n-%5B0%5D\n  == %22enter%22:\n@@ -1377,27 +1377,24 @@\n elif comando\n-%5B0%5D\n  == %22leave%22:\n@@ -1436,27 +1436,24 @@\n elif comando\n-%5B0%5D\n  == %22show%22:%0A\n@@ -1493,27 +1493,24 @@\n elif comando\n-%5B0%5D\n  == %22fuel%22:%0A\n@@ -1542,31 +1542,16 @@\n crement(\n-int(comando%5B1%5D)\n )%0A      \n@@ -1568,11 +1568,8 @@\n ando\n-%5B0%5D\n  == \n@@ -1614,30 +1614,9 @@\n nce(\n-int(comando%5B1%5D))%0A%0A%0Amain()\n+)%0A%0A%0A\n %0A\n",
            "lines": "59"
        },
        {
            "label": "2025-10-06_02-45-34",
            "content": "@@ -558,16 +558,26 @@\n def fuel\n+_increment\n (self, q\n@@ -590,99 +590,8 @@\n t):%0A\n-        # adiciona qtd ao tanque; descarta excesso%0A        if qtd %3C= 0:%0A            return%0A\n     \n@@ -694,16 +694,25 @@\n ef drive\n+_distance\n (self, d\n@@ -910,17 +910,16 @@\n  return%0A\n-%0A\n         \n@@ -965,13 +965,12 @@\n elf.\n-gas -\n+km +\n = di\n@@ -986,36 +986,37 @@\n            self.\n-km +\n+gas -\n = distancia%0A    \n@@ -1025,17 +1025,16 @@\n   else:%0A\n-%0A\n         \n@@ -1042,28 +1042,54 @@\n    p\n-ercorrido = \n+rint(f%22fail: tanque vazio apos andar %7B\n self.gas\n %0A   \n@@ -1084,16 +1084,22 @@\n self.gas\n+%7D km%22)\n %0A       \n@@ -1117,31 +1117,8 @@\n m +=\n- percorrido%0A           \n  sel\n@@ -1114,36 +1114,32 @@\n f.km += self.gas\n- = 0\n %0A            pri\n@@ -1139,63 +1139,20 @@\n     \n-print(f%22fail: tanque vazio apos andar %7Bpercorrido%7D km%22)\n+self.gas = 0\n %0A%0A%0Ad\n@@ -1210,261 +1210,63 @@\n     \n-try:%0A            line = input().strip()%0A        except EOFError:%0A            break%0A%0A        if not line:%0A            continue%0A%0A        parts = line.split()%0A        cmd = parts%5B0%5D%0A%0A        if cmd.startswith(%22$%22):%0A            cmd = cmd%5B1:%5D%0A%0A        if cmd\n+comando = input().strip().split()%0A        if comando%5B0%5D\n  == \n@@ -1290,17 +1290,16 @@\n   break%0A\n-%0A\n         \n@@ -1308,64 +1308,17 @@\n if c\n-md == %22show%22:%0A            print(carro)%0A%0A        elif cmd\n+omando%5B0%5D\n  == \n@@ -1352,17 +1352,16 @@\n enter()%0A\n-%0A\n         \n@@ -1362,26 +1362,33 @@\n       elif c\n-md\n+omando%5B0%5D\n  == %22leave%22:\n@@ -1414,17 +1414,16 @@\n leave()%0A\n-%0A\n         \n@@ -1432,19 +1432,26 @@\n if c\n-md\n+omando%5B0%5D\n  == %22\n-fuel\n+show\n %22:%0A \n@@ -1465,174 +1465,105 @@\n     \n-if len(parts) %3E= 2:%0A                try:%0A                    qtd = \n+pr\n int(\n-parts%5B1%5D)%0A                except:%0A                    continue%0A                carro.fuel(qtd)%0A\n+carro)%0A        elif comando%5B0%5D == %22fuel%22:%0A            carro.fuel_increment(int(comando%5B1%5D))\n %0A   \n@@ -1577,10 +1577,17 @@\n if c\n-md\n+omando%5B0%5D\n  == \n@@ -1599,159 +1599,8 @@\n e%22:%0A\n-            if len(parts) %3E= 2:%0A                try:%0A                    dist = int(parts%5B1%5D)%0A                except:%0A                    continue%0A    \n     \n@@ -1622,84 +1622,37 @@\n rive\n-(\n+_\n dist\n-)%0A%0A        else:%0A            continue%0A%0A%0Aif __name__ == %22__main__%22:%0A    \n+ance(int(comando%5B1%5D))%0A%0A%0A\n main\n",
            "lines": "63"
        },
        {
            "label": "2025-10-06_02-57-04",
            "content": "@@ -145,16 +145,17 @@\n x = 100%0A\n+%0A\n     def \n@@ -245,16 +245,17 @@\n lf.km%7D%22%0A\n+%0A\n     def \n@@ -271,31 +271,8 @@\n f):%0A\n-        self.pass_ +=1%0A\n     \n@@ -290,16 +290,17 @@\n .pass_ %3E\n+=\n  self.pa\n@@ -360,32 +360,42 @@\n ngido%22)%0A    \n+    else:%0A\n         \n self.pass_ -\n@@ -374,32 +374,36 @@\n   else:%0A        \n+    \n self.pass_ -=1%0A \n@@ -401,11 +401,13 @@\n ss_ \n--=1\n++= 1%0A\n %0A   \n@@ -446,17 +446,17 @@\n f.pass_ \n-%3C\n+=\n = 0:%0A   \n@@ -545,16 +545,17 @@\n s_ -= 1%0A\n+%0A\n     def \n@@ -562,26 +562,140 @@\n fuel\n-_increment(self,):\n+(self, qtd: int):%0A        # adiciona qtd ao tanque; descarta excesso%0A        if qtd %3C= 0:%0A            return%0A        self.gas += qtd\n %0A   \n@@ -764,19 +764,9 @@\n sMax\n- - self.gas\n+%0A\n %0A   \n@@ -775,25 +775,16 @@\n ef drive\n-_distance\n (self, d\n@@ -792,16 +792,17 @@\n stancia:\n+ \n int):%0A  \n@@ -821,18 +821,19 @@\n f.pass_ \n-%3C\n =\n+= \n 0:%0A     \n@@ -857,20 +857,20 @@\n l: n\n-%C3%A3o h%C3%A1\n+ao ha\n  ningu\n-%C3%A9\n+e\n m no\n@@ -917,18 +917,19 @@\n elf.gas \n-%3C\n =\n+= \n 0:%0A     \n@@ -974,32 +974,33 @@\n          return%0A\n+%0A\n         if self.\n@@ -1004,16 +1004,17 @@\n lf.gas %3E\n+=\n  distanc\n@@ -1034,19 +1034,21 @@\n    self.\n-km \n+gas -\n = distan\n@@ -1060,37 +1060,36 @@\n            self.\n-gas -\n+km +\n = distancia%0A    \n@@ -1090,32 +1090,33 @@\n a%0A        else:%0A\n+%0A\n             prin\n@@ -1116,54 +1116,28 @@\n    p\n-rint(f%22fail: tanque vazio apos andar %7B\n+ercorrido = \n self.gas\n %7D km\n@@ -1136,14 +1136,8 @@\n .gas\n-%7D km%22)\n %0A   \n@@ -1156,24 +1156,26 @@\n f.km += \n-self.gas\n+percorrido\n %0A       \n@@ -1191,19 +1191,84 @@\n .gas = 0\n+%0A\n    \n+         print(f%22fail: tanque vazio apos andar %7Bpercorrido%7D km%22)\n %0A%0A%0Adef m\n@@ -1294,17 +1294,16 @@\n Carro()%0A\n-%0A\n     whil\n@@ -1322,17 +1322,29 @@\n     \n-line: str\n+try:%0A            line\n  = i\n@@ -1349,16 +1349,24 @@\n  input()\n+.strip()\n %0A       \n@@ -1370,25 +1370,86 @@\n     \n-print(%22$%22 + line)\n+except EOFError:%0A            break%0A%0A        if not line:%0A            continue%0A\n %0A   \n@@ -1457,23 +1457,13 @@\n     \n+p\n ar\n-gs: list%5Bstr%5D\n+ts\n  = l\n@@ -1476,32 +1476,107 @@\n lit(\n-%22 %22)%0A%0A        if args%5B0%5D\n+)%0A        cmd = parts%5B0%5D%0A%0A        if cmd.startswith(%22$%22):%0A            cmd = cmd%5B1:%5D%0A%0A        if cmd\n  == \n@@ -1600,24 +1600,25 @@\n   break%0A\n+%0A\n         \n if args%5B\n@@ -1613,27 +1613,25 @@\n     \n+el\n if \n-args%5B0%5D\n+cmd\n  == %22\n-fuel\n+show\n %22:%0A \n@@ -1645,30 +1645,21 @@\n     \n-carro.fuel_increment()\n+print(carro)%0A\n %0A   \n@@ -1667,27 +1667,26 @@\n     \n+el\n if \n-args%5B0%5D == %22show\n+cmd == %22enter\n %22:%0A \n@@ -1696,28 +1696,30 @@\n         \n-print(carro)\n+carro.enter()%0A\n %0A       \n@@ -1715,34 +1715,32 @@\n ()%0A%0A        \n+el\n if \n-args%5B0%5D\n+cmd\n  == %22leave%22:\n@@ -1779,68 +1779,387 @@\n     \n+el\n if \n-args%5B0%5D == %22drive%22:%0A            distancia = int(input())%0A\n+cmd == %22fuel%22:%0A            if len(parts) %3E= 2:%0A                try:%0A                    qtd = int(parts%5B1%5D)%0A                except:%0A                    continue%0A                carro.fuel(qtd)%0A%0A        elif cmd == %22drive%22:%0A            if len(parts) %3E= 2:%0A                try:%0A                    dist = int(parts%5B1%5D)%0A                except:%0A                    continue%0A    \n     \n@@ -2181,36 +2181,87 @@\n rive\n-_\n+(\n dist\n-ance(distancia)%0A%0A%0A%0A\n+)%0A%0A        else:%0A            continue%0A%0A%0Aif __name__ == %22__main__%22:%0A    \n main()%0A\n-%0A\n",
            "lines": "101"
        },
        {
            "label": "2025-10-07_16-11-49",
            "content": "@@ -581,42 +581,10 @@\n elf,\n-fuel:int):%0A        self.gas = fuel\n+):\n %0A   \n@@ -1355,40 +1355,8 @@\n l%22:%0A\n-            fuel = int(input())%0A\n     \n@@ -1384,20 +1384,16 @@\n crement(\n-fuel\n )%0A      \n",
            "lines": "63"
        },
        {
            "label": "2025-10-07_16-15-03",
            "content": "@@ -1570,64 +1570,8 @@\n e()%0A\n-        if args%5B0%5D == %22enter%22:%0A            carro.enter()\n %0A   \n",
            "lines": "65"
        },
        {
            "label": "2025-10-07_16-18-10",
            "content": "class Carro:\n    def __init__(self):\n        self.pass_ = 0\n        self.km = 0\n        self.passMax = 2\n        self.gas = 0\n        self.gasMax = 100\n    def __str__(self) -> str:\n        return f\"pass: {self.pass_}, gas: {self.gas}, km: {self.km}\"\n    def enter(self):\n        self.pass_ +=1\n        if self.pass_ > self.passMax:\n            print(\"fail: limite de pessoas atingido\")\n            self.pass_ -=1\n    def leave(self):\n        if self.pass_ <= 0:\n            print(\"fail: nao ha ninguem no carro\")\n        else:\n            self.pass_ -= 1\n    def fuel_increment(self,fuel:int):\n        self.gas = fuel\n        if self.gas > self.gasMax:\n            self.gas = self.gasMax - self.gas\n    def drive_distance(self, distancia:int):\n        if self.pass_ <=0:\n            print(\"fail: n\u00e3o h\u00e1 ningu\u00e9m no carro\")\n            return\n        if self.gas <=0:\n            print(\"fail: tanque vazio\")\n            return\n        if self.gas > distancia:\n            self.km = distancia\n            self.gas -= distancia\n        else:\n            print(f\"fail: tanque vazio apos andar {self.gas} km\")\n            self.km += self.gas\n            self.gas = 0   \n\n\ndef main():\n    carro = Carro()\n\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        if args[0] == \"fuel\":\n            fuel = int(input())\n            carro.fuel_increment(fuel)\n        if args[0] == \"show\":\n            print(carro)\n        if args[0] == \"leave\":\n            carro.leave()\n        if args[0] == \"enter\":\n            carro.enter()\n        if args[0] == \"drive\":\n            distancia = int(input())\n            carro.drive_distance(distancia)\n\n\n\nmain()\n\n",
            "lines": "66"
        }
    ]
}