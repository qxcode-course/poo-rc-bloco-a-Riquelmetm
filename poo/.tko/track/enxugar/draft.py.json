{
    "patches": [
        {
            "label": "2025-10-05_01-47-54",
            "content": "@@ -1,63 +1,30 @@\n-class Towel:%0A    def __init__(self, color: str, size: s\n+@@ -56,22 +56,8 @@%0A \n tr):\n+%0A-\n   # \n@@ -39,25 +39,44 @@\n or%0A \n-       se\n+%250A   %0A@@ -71,21 +71,16 @@%0A \n lf.color\n : st\n@@ -71,21 +71,25 @@\n lf.color\n+%0A-\n : str\n+%0A \n  = color\n@@ -93,25 +93,37 @@\n lor%0A\n-        s\n+@@ -97,21 +97,16 @@%0A \n elf.size\n : st\n@@ -122,41 +122,60 @@\n size\n+%0A-\n : str\n+%0A \n  = size\n-%0A        self\n+%250A%0A@@ -125,23 +125,229 @@%0A \n .wetness\n : in\n@@ -174,67 +174,77 @@\n ness\n+%0A-\n : int =\n- 0%0A%0A    def dry(self, amount: int) -%3E None:%0A\n+%0A+ = 0%250A%250A    def getMaxWetness(self) -%253E int:%250A\n         \n self\n@@ -243,39 +243,67 @@\n     \n+if \n self.\n-wetness += amount%0A\n+size == %2522P%2522:%250A            return 10%250A\n         \n if s\n@@ -298,24 +298,26 @@\n         \n+el\n if self.\n wetness \n@@ -312,74 +312,189 @@\n elf.\n-wetness %3E= self.isMaxWetness():%0A            self.wetn\n+size == %2522M%2522:%250A            return 20%250A        elif self.size == %2522G%2522:%250A            return 30%250A        return%0A  0%250A%250A    %0A@@ -441,26 +441,27 @@%0A \n ess \n+%253E\n = self.\n-is\n+%0A-is%0A+get%0A \n MaxW\n@@ -506,48 +506,93 @@\n s()%0A\n-            print(%22toalha encharcada%22)%0A%0A\n+@@ -494,18 +494,19 @@%0A  = self.%0A-is%0A+get%0A MaxWetne%0A@@ -554,63 +554,8 @@%0A %2522)%250A%250A%0A-\n     \n@@ -603,25 +603,27 @@\n isDry(self):\n-%0A\n+%250A\n         retu\n@@ -646,70 +646,106 @@\n == 0\n-%0A%0A    def wringOut(self):%0A        self.wetness = 0%0A%0A    de\n+%250A%250A%0A     %0A@@ -572,16 +572,24 @@%0A ut(self)%0A+ -%253E None%0A :%250A      %0A@@ -622,88 +622,35 @@%0A \n f is\n+%0A-\n MaxW\n@@ -762,15 +762,19 @@\n f) -\n-%3E\n+%253E\n  int:\n-%0A\n+%250A\n     \n@@ -797,11 +797,15 @@\n  == \n-%22P%22\n+%2522P%2522\n :  #\n@@ -817,16 +817,46 @@\n y return\n+%250A  %0A+Dry(self) -%253E bool:%250A\n %0A       \n@@ -861,21 +861,63 @@\n     \n+%0A\n    re\n-turn 10%0A\n+%0A@@ -649,156 +649,32 @@%0A     %0A-  %0A return %0A-10%250A\n     \n@@ -940,13 +940,19 @@\n  == \n-%22M%22:%0A\n+%2522M%2522:%250A\n     \n@@ -968,17 +968,19 @@\n eturn 20\n-%0A\n+%250A\n         \n@@ -999,13 +999,19 @@\n  == \n-%22G%22:%0A\n+%2522G%2522:%250A\n     \n@@ -1027,17 +1027,19 @@\n eturn 30\n-%0A\n+%250A\n         \n@@ -1069,38 +1069,65 @@\n urn%0A\n-%0A    def __str__(self) -%3E\n++self.wetness == 0%0A %250A%250A  %0A@@ -704,20 +704,8 @@%0A\n  str:\n+%0A-\n   # \n@@ -1140,128 +1140,51 @@\n ng%0A \n-       return f%22Cor: %7Bself.color%7D, Tamanho: %7Bself.size%7D, Umidade: %7Bself.wetness%7D%22%0A%0A%0Adef main():%0A    towel =\n+%250A   %0A@@ -818,37 +818,8 @@%0A\n  None\n+%0A-\n   # come\n %C3%A7a s\n@@ -1183,9 +1183,14 @@\n come\n-%C3%A7\n+%25C3%25A7\n a se\n@@ -1208,29 +1208,42 @@\n iada\n-%0A%0A    while True:%0A   \n+%250A%0A %250A   %0A@@ -843,21 +843,16 @@%0A\n     \n@@ -1251,21 +1251,25 @@\n line\n+%0A-\n : str\n+%0A \n  = input\n ().s\n@@ -1268,36 +1268,51 @@\n nput\n-().strip()%0A   \n+%0A@@ -874,25 +874,43 @@%0A\n      \n+%0A-\n print(\n-%22$%22\n+%2522$%2522\n  + l\n@@ -1320,47 +1320,147 @@\n ne)%0A\n-       \n++if line == %2522%2522:%250A            continue%0A %250A   %0A@@ -922,19 +922,8 @@%0A\n  args\n+%0A-\n : list\n-%5Bstr%5D = line.split()%0A\n+%255Bstr%255D%0A  = l%0A@@ -934,24 +934,25 @@%0A split()%250A%0A+%250A\n %0A   \n@@ -1468,979 +1468,1269 @@\n     \n-if\n+ %0A\n  args\n-%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22criar%22:%0A            color: str = args%5B1%5D%0A            size: str = args%5B2%5D%0A            towel = Towel(color, size)%0A%0A        elif args%5B0%5D == %22mostrar%22:%0A            if towel is None:%0A                print(%22fail: toalha nao criada%22)%0A            else:%0A                print(towel)%0A%0A        elif args%5B0%5D == %22seca%22:%0A            if towel is None:%0A                print(%22fail: toalha nao criada%22)%0A            else:%0A                print(%22sim%22 if towel.isDry() else %22nao%22)%0A%0A        elif args%5B0%5D == %22torcer%22:%0A            if towel is None:%0A                print(%22fail: toalha nao criada%22)%0A            else:%0A                towel.wringOut()%0A%0A        elif args%5B0%5D == %22enxugar%22:%0A            if towel is None:%0A                print(%22fail: toalha nao criada%22)%0A            else:%0A                amount: int = int(args%5B1%5D)%0A                towel.dry(amount)%0A%0A        else:%0A            print(%22fail: comando n%C3%A3o encontrado%22)%0A%0A%0Amain()\n+%255B0%255D %0A@@ -943,23 +943,19 @@%0A         %0A-args%255B0%255D%0A+cmd%0A  = args%255B%0A@@ -972,33 +972,8 @@%0A %2522$%2522)%0A-  # remove o $ se existir%0A %250A%250A  %0A@@ -981,23 +981,19 @@%0A      if %0A-args%255B0%255D%0A+cmd%0A  == %2522end%0A@@ -1023,31 +1023,27 @@%0A        elif %0A-args%255B0%255D%0A+cmd%0A  == %2522criar%2522:%0A@@ -1060,21 +1060,16 @@%0A    color%0A-: str%0A  = args%255B%0A@@ -1087,21 +1087,16 @@%0A     size%0A-: str%0A  = args%255B%0A@@ -1147,31 +1147,27 @@%0A        elif %0A-args%255B0%255D%0A+cmd%0A  == %2522mostrar%0A@@ -1305,31 +1305,27 @@%0A        elif %0A-args%255B0%255D%0A+cmd%0A  == %2522seca%2522:%250A%0A@@ -1440,20 +1440,8 @@%0A     %0A- print(%2522sim%2522%0A  if %0A@@ -1457,14 +1457,91 @@%0A ry()%0A- else %0A+:%250A                    print(%2522sim%2522)%250A                else:%250A                    print(%0A %2522nao%0A@@ -1561,25 +1561,22 @@%0A lif %0A-args%255B0%255D == %2522torce%0A+cmd == %2522enxuga%0A r%2522:%250A%0A@@ -1692,57 +1692,91 @@%0A     %0A-towel.wringOut()%250A%250A        elif args%255B0%255D == %2522enxuga%0A+amount = int(args%255B1%255D)%250A                towel.dry(amount)%250A%250A        elif cmd == %2522torce%0A r%2522:%250A%0A@@ -1892,67 +1892,23 @@%0A     %0A-amount: int = int(args%255B1%255D)%250A                towel.dry(amount%0A+towel.wringOut(%0A )%250A%250A %0A@@ -1957,27 +1957,52 @@%0A ndo %0A-n%25C3%25A3o encontrado%2522)%250A%250A%250A%0A+invalido%2522)%250A%250A%250Aif __name__ == %2522__main__%2522:%250A    %0A main\n %0A\n",
            "lines": "140"
        },
        {
            "label": "2025-10-05_02-14-08",
            "content": "class Towel:\n    def __init__(self, color: str, size: str):  # construtor\n        self.color: str = color\n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.isMaxWetness():\n            self.wetness = self.isMaxWetness()\n            print(\"toalha encharcada\")\n\n    def isDry(self):\n        return self.wetness == 0\n\n    def wringOut(self):\n        self.wetness = 0\n\n    def isMaxWetness(self) -> int:\n        if self.size == \"P\":  # early return\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0  # default return\n\n    def __str__(self) -> str:  # toString\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n\n\ndef main():\n    towel = None  # come\u00e7a sem toalha criada\n\n    while True:\n        line: str = input().strip()\n        print(\"$\" + line)\n        args: list[str] = line.split()\n\n        if args[0] == \"end\":\n            break\n\n        elif args[0] == \"criar\":\n            color: str = args[1]\n            size: str = args[2]\n            towel = Towel(color, size)\n\n        elif args[0] == \"mostrar\":\n            if towel is None:\n                print(\"fail: toalha nao criada\")\n            else:\n                print(towel)\n\n        elif args[0] == \"seca\":\n            if towel is None:\n                print(\"fail: toalha nao criada\")\n            else:\n                print(\"sim\" if towel.isDry() else \"nao\")\n\n        elif args[0] == \"torcer\":\n            if towel is None:\n                print(\"fail: toalha nao criada\")\n            else:\n                towel.wringOut()\n\n        elif args[0] == \"enxugar\":\n            if towel is None:\n                print(\"fail: toalha nao criada\")\n            else:\n                amount: int = int(args[1])\n                towel.dry(amount)\n\n        else:\n            print(\"fail: comando n\u00e3o encontrado\")\n\n\nmain()\n",
            "lines": "77"
        }
    ]
}